---
layout: none
sitemap: false
---

$family-primary: Arial, sans-serif;
$primary: black;
$text: black;

// Import Main CSS file from theme
@import "main";

.html {
  scroll-padding-top: $navbar-height;
}

.section {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    scroll-margin-top: $navbar-height;
  }
}

.title {
  font-weight: bold;
}

.title,
.subtitle {
  hyphens: manual;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
    hyphens: manual;
  }
}

.content {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
    hyphens: manual;
  }
}

body {
  hyphens: auto;
}

pre code {
  color: black;
}

/* Make headings the positioning containers. */
h1,
h2,
h3,
h4,
h5,
h6 {
  position: relative;
}

.anchor-link {
  position: absolute;

  /* Position to the left of the heading text. */
  /* This moves the link outside the heading's content box. */
  /* You can adjust this value (e.g., -1.2em) as needed. */
  left: -2em;

  /* Styling */
  top: 50%;
  transform: translateY(-50%);
  text-decoration: none;
  font-size: 0.5em;
  opacity: 0;
}

/* Show the anchor link on heading hover */
h1:hover .anchor-link,
h2:hover .anchor-link,
h3:hover .anchor-link,
h4:hover .anchor-link,
h5:hover .anchor-link,
h6:hover .anchor-link {
  opacity: 1;
}

/* Link-specific hover */
.anchor-link:hover {
  opacity: 1;
}

.footer {
  padding-bottom: 0 !important; // Or just 0 if not needed
}

.scrolling-banner {
  overflow: hidden; // Keep this to contain the scrolling content
  z-index: -1; // Keep if you want it behind other content
  pointer-events: none; // Keep if you want it unclickable

  // Keep these for the flex behavior of the banner itself
  display: flex;
  align-items: flex-start;

  // Make the banner fill the full width of its direct parent (the `hyphens: manual` div)
  width: 100%;
  height: 3em;
}

.scrolling-banner.hidden {
  display: none !important; /* Or visibility: hidden; opacity: 0; */
}

.scrolling-track {
  display: flex;
  // Use the defined CSS variable for duration
  animation: scroll-left var(--scroll-duration) linear infinite;
  width: max-content; /* Allows the track to expand to fit its duplicated content */
}

.scrolling-track img {
  // Option A: Give images a base fixed width, but allow them to shrink within the column.
  width: var(--image-base-width);
  height: auto; // Maintain aspect ratio based on the fixed width

  max-width: 100%; // Crucial: Allows the image to shrink if the column becomes narrower than --image-base-width
  max-height: 100%; // Ensures the image doesn't overflow vertically if it has a very tall aspect ratio

  object-fit: contain; /* Scales images to fit, maintaining aspect ratio */

  // Use the defined CSS variable for spacing
  margin-right: var(--image-spacing);
  flex-shrink: 0; /* Prevents images from shrinking below their content size unless max-width takes over */
  opacity: 0.8;
  display: block;
}

@keyframes scroll-left {
  0% {
    transform: translateX(0%);
  }
  100% {
    /* Calculate the exact distance to scroll: (width of one image slot + spacing) * (number of original images) */
    /* This uses the CSS variables for a cleaner calculation */
    transform: translateX(calc(-1 * (var(--image-base-width) + var(--image-spacing)) * var(--original-image-count)));
  }
}
