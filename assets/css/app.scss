---
layout: none
sitemap: false
---

$family-primary: Arial, sans-serif;
$primary: black;
$text: black;

// Import Main CSS file from theme
@import "main";

.html {
  scroll-padding-top: $navbar-height;
}

.section {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    scroll-margin-top: $navbar-height;
  }
}

.title {
  font-weight: bold;
}

.title,
.subtitle {
  hyphens: manual;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
    hyphens: manual;
  }
}

.content {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
    hyphens: manual;
  }
}

body {
  hyphens: auto;
}

pre code {
  color: black;
}

/* Make headings the positioning containers. */
h1,
h2,
h3,
h4,
h5,
h6 {
  position: relative;
}

.anchor-link {
  position: absolute;

  /* Position to the left of the heading text. */
  /* This moves the link outside the heading's content box. */
  /* You can adjust this value (e.g., -1.2em) as needed. */
  left: -2em;

  /* Styling */
  top: 50%;
  transform: translateY(-50%);
  text-decoration: none;
  font-size: 0.5em;
  opacity: 0;
}

/* Show the anchor link on heading hover */
h1:hover .anchor-link,
h2:hover .anchor-link,
h3:hover .anchor-link,
h4:hover .anchor-link,
h5:hover .anchor-link,
h6:hover .anchor-link {
  opacity: 1;
}

/* Link-specific hover */
.anchor-link:hover {
  opacity: 1;
}

.footer {
  padding-bottom: 0 !important; // Or just 0 if not needed
}

.scrolling-banner {
  overflow: hidden; // Keep this to contain the scrolling content horizontally
  pointer-events: none; // Keep if you want it unclickable

  display: flex;
  align-items: center; // Vertically center images within the banner if there's extra space.
                       // Or 'flex-start' if you prefer them top-aligned.

  width: 100%;
  // IMPORTANT: Remove fixed height. Let content define height.
  // height: auto; // This is the default, but can be explicit if needed.
  // We want the banner's height to expand to fit the tallest image that scrolls through.
  // This will make the 'cell' taller if a very tall image appears.
}

.scrolling-banner.hidden {
  display: none !important;
}

.scrolling-track {
  display: flex;
  // IMPORTANT: Remove fixed height. Let content define height.
  // height: auto; // This is the default for flex items, let it be.
  align-items: center; // Ensures all images align vertically, even if one is taller than others.

  // Use a fixed gap for spacing between images.
  gap: var(--image-spacing, 1em); // Default gap

  animation: scroll-left var(--scroll-duration) linear infinite;
}

.scrolling-track img {
  // IMPORTANT: Remove fixed height.
  height: auto; // Let natural aspect ratio determine height based on width.
  width: auto; // Let natural aspect ratio determine width based on height.

  // Instead of fixed height, define a max height to prevent excessively tall images,
  // but allow them to scale down.
  // This max-height should be based on your design for the 'cell' content area.
  // For example, if you want the banner generally to not exceed 10em in height:
  max-height: 10em; // Or a value that makes sense for your layout.
                    // This is the constraint that ensures the banner doesn't get *too* tall.

  // Allow images to take up their natural width (up to the max-height constraint).
  // If no specific width constraint, they'll be as wide as they need to be to fit max-height.
  max-width: none; // Images can be wider than the viewport, as they will scroll off.

  // object-fit: contain; // Still useful if max-width/max-height constraints might crop it.
                       // If you only use max-height/width and no explicit height/width,
                       // object-fit might be less critical but still good for safety.

  flex-shrink: 0; // Prevent images from shrinking beyond their natural (or scaled) size
  opacity: 0.8;
  display: block;
}

@keyframes scroll-left {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(calc(-1 * var(--total-original-images-width)));
  }
}